extends Node

var list_of_decks = {
	"shadi" : {
		"UR" : ["00317", "00415", "01121", "00320", "00117", "00430"],
		"SR" : ["00609", "00401", "00348", "00333", "00418", "00318", "00013", "00321", "00334", "00019", "00104", "00119"],
		"R"  : ["00400", "00414", "01122", "01199", "00335", "00325", "00153", "00319", "00337", "00322", "00345", "00009", "00011", "00091", "00480", "00466", "00336", "00338", "00469", "00417", "00007", "00247", "00249", "00250", "00252", "00209"],
		"C"  : ["00326", "00124", "00327", "00328", "00323", "00329", "00330", "00331", "00332", "00151", "00129", "00133", "00204"]
	},

	"yugi" : {
		"UR" : ["00423", "00168", "00424", "00425", "00233", "00426", "00427", "00238", "00236", "00431", "00171", "00079", "00239", "00429", "00430"],
		"SR" : ["00234", "00428", "00232", "00066", "00235", "00080", "00072", "00067", "00432", "00433", "00357", "00435", "00170", "00219", "00436", "00437", "00438", "00439", "00162", "00117"],
		"R"  : ["00013", "00153", "00083", "00441", "00442", "00443", "00434", "00444", "00445", "00446", "00447", "00448", "00449", "00450", "00451", "00452", "00453", "00454", "00455", "00169", "00167", "00456", "00457", "00458", "00459", "00460", "00461", "00462", "00457", "00458", "00237", "00231", "00463", "00464", "00471"],
		"C" :  ["0465", "0014", "0466", "0467", "0468", "0469", "0470", "0472", "0473", "0474", "0475", "0476", "0149", "0086", "0010", "0477", "0478", "0008", "0479", "0480", "0481", "0482", "0132", "0100", "0011", "0078", "0058", "0197", "0202", "0196", "0105"]
	},

	"grandpa" : {
		"UR" : ["00240", "00603", "00605", "00415", "00604", "00429", "00430"],
		"SR" : ["00066", "00609", "00072", "00067", "00608", "00606", "00471", "00567", "00515", "00117", "00118"],
		"R"  : ["00465", "00153", "00010", "00086", "00149", "00440", "00013", "00442", "00570", "00586", "00610", "00611", "00400", "00612", "00613", "00614", "00623", "00615", "00616", "00617", "00441", "00469", "00618", "00619", "00620", "00621", "00622", "00607", "0198", "0197", "0209"],
		"C"  : ["0623", "0624", "0625", "0143", "0626", "0595", "0123", "0134", "0125", "0129", "0131"]
	},

	"joey" : {
		"UR" : ["00074", "00071", "00238", "00159", "00627", "00628", "00629", "00630", "00636", "00643", "00632", "01099"],
		"SR" : ["00073", "00076", "00633", "00638", "00639", "00645", "00646", "00642", "00333", "00659", "00334", "00647", "00640", "00637", "00667", "00648", "00155", "00649", "00650"],
		"R"  : ["00658", "00651", "00652", "00006", "00409", "00653", "00340", "00077", "00339", "00654", "00376", "00078", "00655", "00656", "00015", "00126", "00641", "00075", "00476", "00477", "00660", "00661", "00662", "00663", "00664", "00665", "00666", "00668", "00525", "00526", "00202", "00110"],
		"C"  : ["0670", "0130", "0671", "0125", "0672", "0673", "0319", "0143", "0674", "0675", "0132", "0479", "0676", "0677", "0678", "0679"]
	},

	"tea" : {
		"UR" : ["00216", "00212", "00393", "01123", "00080", "01124", "00117", "00429"],
		"SR" : ["00231", "00471", "00055", "00090", "00220", "00211", "00213", "01126", "01127", "01128", "01130", "01131", "01132"],
		"R"  : ["01133", "00248", "00134", "01134", "00570", "01135", "01009", "00089", "00281", "01137", "00237", "01138", "01139", "01140", "00098", "00060", "00037", "00038", "00324", "00064", "01141", "00969", "00968", "01142", "01143", "00215", "00440", "00047", "01005", "00391", "00091", "01129", "00108", "00207", "00197", "00224"],
		"C"  : ["01144", "01145", "00465", "01146", "00599", "00275", "00153", "00254", "01147", "01148", "01149", "00129", "01150"]
	},

	"bakura" : {
		"UR" : ["01151", "00920", "00072", "01153", "01154", "00101", "00117", "00429"],
		"SR" : ["00353", "01155", "00161", "01156", "01157", "00334", "01158", "00515", "01159", "01152", "01124", "00497", "00119"],
		"R"  : ["00089", "01139", "00469", "01160", "01161", "01162", "01163", "01164", "01165", "01166", "01167", "00058", "00010", "01168", "00570", "00153", "00522", "00579", "00571", "00513", "00586", "00458", "01169", "00615", "01058", "00011", "00347", "00352", "00937", "00936", "01170", "01171", "00525", "00526", "00105", "00210"],
		"C"  : ["00248", "01150", "01172", "00417", "00441", "00254", "00330", "00669"]
	},

	"tristan" : {
		"UR" : ["00317", "00633", "00034", "01173", "01175", "00101", "00102", "00119", "01131"],
		"SR" : ["00160", "01177", "01178", "01174", "00511", "00952", "00825", "01179", "00333", "01180", "01181", "01182", "01183", "01185", "01176", "00103", "00104"],
		"R"  : ["01186", "01148", "01149", "01150", "00545", "01187", "00391", "01170", "00283", "00597", "01188", "01189", "01190", "01191", "01192", "01030", "00033", "01193", "00679", "00669", "01146", "01184", "00660", "01194", "01195", "00047", "00676", "00039", "00656", "00121", "00069", "00153", "01196", "00083", "01197", "01198", "00525", "00203"],
		"C"  : ["00583", "00338", "00129", "01144", "00330", "00323", "00094", "00124", "00673", "00275", "00602"]
	},

	"duke" : {
		"UR" : ["01200", "01201", "01202", "01203", "01204", "01205", "00102", "00826", "00429"],
		"SR" : ["01206", "00341", "00498", "01207", "01208", "00641", "00744", "00515", "01210", "00649", "00650", "01130", "01211"],
		"R"  : ["01212", "01213", "01209", "01214", "01215", "00132", "01216", "01217", "01218", "00031", "00482", "00069", "01219", "01220", "01221", "01222", "01223", "01066", "00679", "01224", "01225", "01226", "01227", "01228", "00203"],
		"C"  : ["01229", "01230", "01231", "01232", "01233", "01234"]
	},
}

#Function to generate a deck using the lists above
func get_a_deck(npc_name):
	var final_built_deck = [] 
	var player_card_count = PlayerData.player_trunk.keys().size() 
	
	#Responsive difficulty of the game
	var rarity_counter : Dictionary
	
	if player_card_count <= 100: #Easy Mode
		rarity_counter = {"UR":0, "SR":2, "R":20, "C":18}
		
	elif player_card_count >= 256: #Normal Mode
		rarity_counter = {"UR":1, "SR":4, "R":25, "C":10}
		
	elif player_card_count >= 512: #Hard Mode
		rarity_counter = {"UR":3, "SR":7, "R":25, "C":5}
		
	elif player_card_count >= 722: #Forbidden Mode
		rarity_counter = {"UR":5, "SR":15, "R":20, "C":0}
	
	#depending on the NPC name, generate a very dificult deck
	#TODO
	
	#Generate the actual deck
	randomize()
	for rarity in rarity_counter.keys():
		for _i in range(rarity_counter[rarity]):
			var random_index = randi() %list_of_decks[npc_name][rarity].size()
			final_built_deck.append(list_of_decks[npc_name][rarity][random_index].pad_zeros(5))
	
	return final_built_deck.duplicate(true)
